on: [push]
name: CI

jobs:
    test:
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3

        - name: Create env file
          run: |
            mkdir config
            touch config/.env
            echo BEARER_TOKEN=${{ secrets.BEARER_TOKEN }} >> config/.env
            echo CONSUMER_KEY=${{ secrets.CONSUMER_KEY }} >> config/.env
            echo CONSUMER_SECRET=${{ secrets.CONSUMER_SECRET }} >> config/.env
            echo ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }} >> config/.env
            echo ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }} >> config/.env

        - name: Install Python 3
          uses: actions/setup-python@v1
          with:
            python-version: 3.6

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Run unit tests
          run: python -m unittest 

    lint:
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3

        - name: Install Python 3
          uses: actions/setup-python@v1
          with:
            python-version: 3.6

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Lint all src files
          run: python -m pylint src/

    build:
        needs: [test, lint]
        runs-on: ubuntu-latest
        steps:

        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

        - name: Create env file
          run: |
            mkdir config
            touch config/.env
            echo BEARER_TOKEN=${{ secrets.BEARER_TOKEN }} >> config/.env
            echo CONSUMER_KEY=${{ secrets.CONSUMER_KEY }} >> config/.env
            echo CONSUMER_SECRET=${{ secrets.CONSUMER_SECRET }} >> config/.env
            echo ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }} >> config/.env
            echo ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }} >> config/.env
        
        - name: 'Build image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        - run: |
            docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/avalanchebot:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/avalanchebot:${{ github.sha }}
            
    deploy:
        needs: build
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/master'
        steps:

        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

        - name: 'Deploy to Azure Container Instances'
          uses: 'azure/aci-deploy@v1'
          with:
            resource-group: ${{ secrets.RESOURCE_GROUP }}
            dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
            image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/avalanchebot:${{ github.sha }}
            registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            registry-username: ${{ secrets.REGISTRY_USERNAME }}
            registry-password: ${{ secrets.REGISTRY_PASSWORD }}
            name: avalanchebot
            location: 'east us'
