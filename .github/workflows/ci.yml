on: [push]
name: CI

env:
  AWS_REGION: ca-central-1
  ECR_REPOSITORY: avalanche-bot
  ECS_SERVICE: avalanche-bot-service
  ECS_CLUSTER: avalanche-bot-cluster
  ECS_TASK_DEFINITION: .aws/task-definition.json
  CONTAINER_NAME: avalanche-bot

jobs:
    test:
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3

        - name: Create env file
          run: |
            mkdir config
            touch config/.env
            echo BEARER_TOKEN=${{ secrets.BEARER_TOKEN }} >> config/.env
            echo CONSUMER_KEY=${{ secrets.CONSUMER_KEY }} >> config/.env
            echo CONSUMER_SECRET=${{ secrets.CONSUMER_SECRET }} >> config/.env
            echo ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }} >> config/.env
            echo ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }} >> config/.env

        - name: Install Python 3
          uses: actions/setup-python@v1
          with:
            python-version: 3.9

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Run unit tests
          run: make test

        - name: Publish Unit Test Results
          uses: EnricoMi/publish-unit-test-result-action@v1.36
          with:
            files: ./results.xml

    lint:
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3

        - name: Install Python 3
          uses: actions/setup-python@v1
          with:
            python-version: 3.9

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Lint all src files
          run: make lint

    analyze:
        runs-on: ubuntu-latest

        steps:
          - uses: actions/checkout@v3

          - name: Install Python 3
            uses: actions/setup-python@v1
            with:
              python-version: 3.9

          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt

          - name: Perform static analysis on all src files
            run: make analyze
    
    deploy:
        needs: [test, lint, analyze]
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        steps:

        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Build, tag, and push docker image to Amazon ECR
          env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: ${{ env.ECR_REPOSITORY }}
            IMAGE_TAG: ${{ github.sha }}
          run: |
            docker build -t $REGISTRY/$REPOSITORY:latest .
            docker push $REGISTRY/$REPOSITORY:latest

        - name: Deploy Amazon ECS task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
            task-definition: .aws/task-definition.json
            service: ${{ env.ECS_SERVICE }}
            cluster: ${{ env.ECS_CLUSTER }}
            wait-for-service-stability: true
